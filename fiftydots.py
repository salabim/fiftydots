import collections

spec = """
\x20
.....
.....
.....
.....
.....
.....
.....
.....
.....
.....
!
.....
..*..
..*..
..*..
..*..
..*..
.....
..*..
.....
.....
\x22
.....
.*.*.
.*.*.
.*.*.
.....
.....
.....
.....
.....
.....
#
.....
.*.*.
.*.*.
*****
.*.*.
*****
.*.*.
.*.*.
.....
.....
$
.....
..*..
.****
*.*..
.***.
..*.*
****.
..*..
.....
.....
%
.....
**...
**..*
...*.
..*..
.*...
*..**
...**
.....
.....
&
.....
.**..
*..*.
*.*..
.*...
*.*.*
*..*.
.**.*
.....
.....
\x27
.....
..*..
..*..
..*..
.....
.....
.....
.....
.....
.....
(
.....
...*.
..*..
.*...
.*...
.*...
..*..
...*.
.....
.....
)
.....
.*...
..*..
...*.
...*.
...*.
..*..
.*...
.....
.....
*
.....
.....
..*..
*.*.*
.***.
*.*.*
..*..
.....
.....
.....
+
.....
.....
..*..
..*..
*****
..*..
..*..
.....
.....
.....
,
.....
.....
.....
.....
.....
.....
..**.
..**.
...*.
..*..
-
.....
.....
.....
.....
*****
.....
.....
.....
.....
.....
.
.....
.....
.....
.....
.....
.....
..**.
..**.
.....
.....
/
.....
.....
....*
...*.
..*..
.*...
*....
.....
.....
.....
0
.....
.***.
*...*
*..**
*.*.*
**..*
*...*
.***.
.....
.....
1
.....
..*..
.**..
..*..
..*..
..*..
..*..
.***.
.....
.....
2
.....
.***.
*...*
....*
...*.
..*..
.*...
*****
.....
.....
3
.....
*****
...*.
..*..
...*.
....*
*...*
.***.
.....
.....
4
.....
...*.
..**.
.*.*.
*..*.
*****
...*.
...*.
.....
.....
5
.....
*****
*....
****.
....*
....*
*...*
.***.
.....
.....
6
.....
..**.
.*...
*....
****.
*...*
*...*
.***.
.....
.....
7
.....
*****
....*
...*.
..*..
..*..
..*..
..*..
.....
.....
8
.....
.***.
*...*
*...*
.***.
*...*
*...*
.***.
.....
.....
9
.....
.***.
*...*
*...*
.****
....*
...*.
.**..
.....
.....
;
.....
.....
.....
..**.
..**.
.....
..**.
..**.
...*.
..*..
:
.....
.....
.....
..**.
..**.
.....
..**.
..**.
.....
.....
<
.....
....*
...*.
..*..
.*...
..*..
...*.
....*
.....
.....
=
.....
.....
.....
*****
.....
*****
.....
.....
.....
.....
>
.....
*....
.*...
..*..
...*.
..*..
.*...
*....
.....
.....
?
.....
.***.
*...*
....*
...*.
..*..
.....
..*..
.....
.....
@
.....
.***.
*...*
....*
.*..*
*.*.*
*.*.*
.***.
.....
.....
A
.....
.***.
*...*
*...*
*****
*...*
*...*
*...*
.....
.....
B
.....
****.
*...*
*...*
****.
*...*
*...*
****.
.....
.....
C
.....
.***.
*...*
*....
*....
*....
*...*
.***.
.....
.....
D
.....
***..
*..*.
*...*
*...*
*...*
*..*.
***..
.....
.....
E
.....
*****
*....
*....
****.
*....
*....
*****
.....
.....
F
.....
*****
*....
*....
****.
*....
*....
*....
.....
.....
G
.....
.***.
*...*
*....
*.***
*...*
*...*
.****
.....
.....
H
.....
*...*
*...*
*...*
*****
*...*
*...*
*...*
.....
.....
I
.....
.***.
..*..
..*..
..*..
..*..
..*..
.***.
.....
.....
J
.....
..***
...*.
...*.
...*.
...*.
*..*.
.**..
.....
.....
K
.....
*...*
*..*.
*.*..
**...
*.*..
*..*.
*...*
.....
.....
L
.....
*....
*....
*....
*....
*....
*....
*****
.....
.....
M
.....
*...*
**.**
*.*.*
*...*
*...*
*...*
*...*
.....
.....
N
.....
*...*
*...*
**..*
*.*.*
*..**
*...*
*...*
.....
.....
O
.....
.***.
*...*
*...*
*...*
*...*
*...*
.***.
.....
.....
P
.....
****.
*...*
*...*
****.
*....
*....
*....
.....
.....
Q
.....
.***.
*...*
*...*
*...*
*.*.*
*..*.
.**.*
.....
.....
R
.....
****.
*...*
*...*
****.
*.*..
*..*.
*...*
.....
.....
S
.....
.***.
*...*
*....
.***.
....*
*...*
.***.
.....
.....
T
.....
*****
..*..
..*..
..*..
..*..
..*..
..*..
.....
.....
U
.....
*...*
*...*
*...*
*...*
*...*
*...*
.***.
.....
.....
V
.....
*...*
*...*
*...*
*...*
*...*
.*.*.
..*..
.....
.....
W
.....
*...*
*...*
*...*
*.*.*
*.*.*
**.**
*...*
.....
.....
X
.....
*...*
*...*
.*.*.
..*..
.*.*.
*...*
*...*
.....
.....
Y
.....
*...*
*...*
.*.*.
..*..
..*..
..*..
..*..
.....
.....
Z
.....
*****
....*
...*.
..*..
.*...
*....
*****
.....
.....
[
.....
.***.
.*...
.*...
.*...
.*...
.*...
.***.
.....
.....
\x5c
.....
.....
*....
.*...
..*..
...*.
....*
.....
.....
.....
]
.....
.***.
...*.
...*.
...*.
...*.
...*.
.***.
.....
.....
^
.....
..*..
.*.*.
*...*
.....
.....
.....
.....
.....
.....
_
.....
.....
.....
.....
.....
.....
.....
*****
.....
.....
`
.....
.*...
..*..
...*.
.....
.....
.....
.....
.....
.....
a
.....
.....
.....
.***.
....*
.****
*...*
.****
.....
.....
b
.....
*....
*....
*.**.
**..*
*...*
*...*
.***.
.....
.....
c
.....
.....
.....
.***.
*....
*....
*...*
.***.
.....
.....
d
.....
....*
....*
.**.*
*..**
*...*
*...*
.****
.....
.....
e
.....
.....
.....
.***.
*...*
*****
*....
.***.
.....
.....
f
.....
...*.
..*.*
..*..
.***.
..*..
..*..
..*..
.....
.....
g
.....
.....
.....
.****
*...*
*...*
*..**
.**.*
....*
.***.
h
.....
*....
*....
*.**.
**..*
*...*
*...*
*...*
.....
.....
i
.....
..*..
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
j
.....
...*.
.....
..**.
...*.
...*.
...*.
...*.
*..*.
.**..
k
.....
.*...
.*...
.*..*
.*.*.
.**..
.*.*.
.*..*
.....
.....
l
.....
.**..
..*..
..*..
..*..
..*..
..*..
.***.
.....
.....
m
.....
.....
.....
**.*.
*.*.*
*.*.*
*.*.*
*.*.*
.....
.....
n
.....
.....
.....
*.**.
**..*
*...*
*...*
*...*
.....
.....
o
.....
.....
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
p
.....
.....
.....
*.**.
**..*
*...*
**..*
*.**.
*....
*....
q
.....
.....
.....
.**.*
*..**
*...*
*..**
.**.*
....*
....*
r
.....
.....
.....
.*.**
.**..
.*...
.*...
.*...
.....
.....
s
.....
.....
.....
.****
*....
.***.
....*
****.
.....
.....
t
.....
..*..
..*..
.***.
..*..
..*..
..*.*
...*.
.....
.....
u
.....
.....
.....
*...*
*...*
*...*
*..**
.**.*
.....
.....
v
.....
.....
.....
*...*
*...*
*...*
.*.*.
..*..
.....
.....
w
.....
.....
.....
*...*
*...*
*.*.*
*.*.*
.*.*.
.....
.....
x
.....
.....
.....
*...*
.*.*.
..*..
.*.*.
*...*
.....
.....
y
.....
.....
.....
*...*
*...*
*...*
*..**
.**.*
....*
.***.
z
.....
.....
.....
*****
...*.
..*..
.*...
*****
.....
.....
{
.....
...**
..*..
..*..
.*...
..*..
..*..
...**
.....
.....
|
.....
..*..
..*..
..*..
..*..
..*..
..*..
..*..
.....
.....
}
.....
**...
..*..
..*..
...*.
..*..
..*..
**...
.....
.....
~
.....
.*...
*.*.*
...*.
.....
.....
.....
.....
.....
.....
\x7f
.....
*.*.*
.*.*.
*.*.*
.*.*.
*.*.*
.*.*.
*.*.*
.....
.....
ä
.....
.*.*.
.....
.***.
....*
.****
*...*
.****
.....
.....
à
.*...
..*..
.....
.***.
....*
.****
*...*
.****
.....
.....
á
...*.
..*..
.....
.***.
....*
.****
*...*
.****
.....
.....
â
..*..
.*.*.
.....
.***.
....*
.****
*...*
.****
.....
.....
å
..*..
.*.*.
..*..
.***.
....*
.****
*...*
.****
.....
.....
ã
.*...
*.*.*
...*.
.***.
....*
.****
*...*
.****
.....
.....
æ
.....
.....
.....
**.*.
..*.*
.****
*.*..
.*.**
.....
.....
Ä
.....
.*.*.
.....
.***.
*...*
*****
*...*
*...*
.....
.....
À
.*...
..*..
.....
.***.
*...*
*****
*...*
*...*
.....
.....
Á
...*.
..*..
.....
.***.
*...*
*****
*...*
*...*
.....
.....
Â
..*..
.*.*.
.....
.***.
*...*
*****
*...*
*...*
.....
.....
Å
..*..
.*.*.
..*..
.***.
*...*
*****
*...*
*...*
.....
.....
Ã
.*...
*.*.*
...*.
.***.
*...*
*****
*...*
*...*
.....
.....
Æ
.....
.****
*.*..
*.*..
*****
*.*..
*.*..
*.***
.....
.....
ë
.....
.*.*.
.....
.***.
*...*
*****
*....
.***.
.....
.....
è
.*...
..*..
.....
.***.
*...*
*****
*....
.***.
.....
.....
é
...*.
..*..
.....
.***.
*...*
*****
*....
.***.
.....
.....
ê
..*..
.*.*.
.....
.***.
*...*
*****
*....
.***.
.....
.....
Ë
.....
.*.*.
.....
*****
*....
****.
*....
*****
.....
.....
È
.*...
..*..
.....
*****
*....
****.
*....
*****
.....
.....
É
...*.
..*..
.....
*****
*....
****.
*....
*****
.....
.....
Ê
..*..
.*.*.
.....
*****
*....
****.
*....
*****
.....
.....
ï
.....
.*.*.
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
ì
.*...
..*..
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
í
...*.
..*..
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
î
..*..
.*.*.
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
Ï
.....
.*.*.
.....
.***.
..*..
..*..
..*..
.***.
.....
.....
Ì
.*...
..*..
.....
.***.
..*..
..*..
..*..
.***.
.....
.....
Í
...*.
..*..
.....
.***.
..*..
..*..
..*..
.***.
.....
.....
Î
..*..
.*.*.
.....
.***.
..*..
..*..
..*..
.***.
.....
.....
ö
.....
.*.*.
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
ò
.*...
..*..
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
ó
...*.
..*..
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
ô
..*..
.*.*.
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
õ
.*...
*.*.*
...*.
.***.
*...*
*...*
*...*
.***.
.....
.....
ø
.....
.....
.....
.***.
*..**
*.*.*
**..*
.***.
.....
.....
œ
.....
.....
.....
.*.*.
*.*.*
*.***
*.*..
.*.**
.....
.....
Ö
.....
.*.*.
.....
*****
*...*
*...*
*...*
*****
.....
.....
Ò
.*...
..*..
.....
*****
*...*
*...*
*...*
*****
.....
.....
Ó
...*.
..*..
.....
*****
*...*
*...*
*...*
*****
.....
.....
Ô
..*..
.*.*.
.....
*****
*...*
*...*
*...*
*****
.....
.....
Õ
.*...
*.*.*
...*.
*****
*...*
*...*
*...*
*****
.....
.....
Ø
.....
.....
.....
*****
*..**
*.*.*
**..*
*****
.....
.....
Œ
.....
.****
*.*..
*.*..
*.***
*.*..
*.*..
.****
.....
.....
ü
.....
.*.*.
.....
*...*
*...*
*...*
*..**
.**.*
.....
.....
ù
.*...
..*..
.....
*...*
*...*
*...*
*..**
.**.*
.....
.....
ú
...*.
..*..
.....
*...*
*...*
*...*
*..**
.**.*
.....
.....
û
..*..
.*.*.
.....
*...*
*...*
*...*
*..**
.**.*
.....
.....
Ü
.....
.*.*.
.....
*...*
*...*
*...*
*...*
.***.
.....
.....
Ù
.*...
..*..
.....
*...*
*...*
*...*
*...*
.***.
.....
.....
Ú
...*.
..*..
.....
*...*
*...*
*...*
*...*
.***.
.....
.....
Û
..*..
.*.*.
.....
*...*
*...*
*...*
*...*
.***.
.....
.....
ñ
.*...
*.*.*
...*.
*.**.
**..*
*...*
*...*
*...*
.....
.....
ĳ
.....
.*..*
.....
.*..*
.*..*
.*..*
.*..*
.*..*
....*
.***.
Ĳ
.....
.*..*
.*..*
.*..*
.*..*
....*
....*
.***.
.....
.....
ç
.....
.....
.....
.***.
*....
*....
*...*
.***.
...*.
..**.
ý
...*.
..*..
.....
*...*
*...*
*...*
*..**
.**.*
....*
.***.
ć
.....
...*.
..*..
.***.
*....
*....
*...*
.***.
.....
.....
č
.....
.*.*.
..*..
.***.
*....
*....
*...*
.***.
.....
.....
ę
.....
.....
.....
.***.
*...*
*****
*....
.***.
..*..
..**.
ī
.....
.***.
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
ı
.....
.....
.....
.**..
..*..
..*..
..*..
.***.
.....
.....
ś
.....
...*.
..*..
.****
*....
.***.
....*
****.
.....
.....
Š
.....
...*.
..*..
*****
*....
*****
....*
*****
.....
.....
ť
.....
..*.*
..**.
.***.
..*..
..*..
..*.*
...*.
.....
.....
ų
.....
.....
.....
*...*
*...*
*...*
*...*
.***.
...*.
...**
Κ
.....
*...*
*..*.
*.*..
**...
*.*..
*..*.
*...*
.....
.....
ά
..*..
.*...
.....
.*.*.
*.*..
*..*.
*.*..
.*.*.
.....
.....
ή
...*.
..*..
.....
*.**.
**..*
*...*
*...*
*...*
....*
....*
α
.....
.....
.....
.*.*.
*.*..
*..*.
*.*..
.*.*.
.....
.....
ι
.....
.....
.....
.**..
..*..
..*..
..*..
...*.
.....
.....
λ
.....
*....
.*...
..*..
..**.
.*..*
*...*
*...*
.....
.....
ν
.....
.....
.....
*...*
*...*
*...*
*..*.
.**..
.....
.....
ο
.....
.....
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
ρ
.....
.....
.....
.***.
*...*
*...*
*...*
****.
*....
*....
χ
.....
.....
.....
**..*
.*..*
..**.
.**..
.*.*.
*..*.
*..**
Г
.....
*****
*....
*....
*....
*....
*....
*....
.....
.....
З
.....
.**..
*..*.
....*
..**.
....*
*...*
.***.
.....
.....
Н
.....
*...*
*...*
*...*
*****
*...*
*...*
*...*
.....
.....
С
.....
.***.
*...*
*....
*....
*....
*...*
.***.
.....
.....
Ч
.....
*...*
*...*
*...*
*...*
.**.*
....*
....*
.....
.....
а
.....
.....
.....
.***.
....*
.****
*...*
.****
.....
.....
в
.....
.....
.....
****.
*...*
****.
*...*
****.
.....
.....
г
.....
.....
.....
*****
*....
*....
*....
*....
.....
.....
д
.....
.....
.....
.***.
.* *.
.*.*.
.*.*.
*****
*...*
.....
е
.....
.....
.....
.***.
*...*
*****
*....
.***.
.....
.....
и
.....
.....
.....
*...*
*..**
*.*.*
**..*
*...*
.....
.....
к
.....
.....
.....
*..*.
*.*..
**...
*.*..
*..*.
.....
.....
м
.....
.....
.....
*...*
**.**
*.*.*
*...*
*...*
.....
.....
н
.....
.....
.....
*...*
*...*
*****
*...*
*...*
.....
.....
о
.....
.....
.....
.***.
*...*
*...*
*...*
.***.
.....
.....
р
.....
.....
.....
*.**.
**..*
*...*
**..*
*.**.
*....
*....
с
.....
.....
.....
.***.
*....
*....
*...*
.***.
.....
.....
т
.....
.....
.....
*****
..*..
..*..
..*..
..*..
.....
.....
ы
.....
.....
.....
*...*
*...*
**..*
*.*.*
**..*
.....
.....
ќ
..*..
.*...
.....
*..*.
*.*..
**...
*.*..
*..*.
.....
.....
\u1492
.....
.....
****.
....*
*...*
*...*
*...*
*...*
.....
.....
\u1489
.....
.....
***..
...*.
...*.
...*.
...*.
*****
.....
.....
\u1493
.....
.....
..*..
..*..
..*..
..*..
..*..
..*..
.....
.....
\u1496
.....
.....
*..**
*.*.*
*...*
*...*
*...*
.***.
.....
.....
\u1504
.....
.....
.**,.
...*.
...*.
...*.
...*.
.***.
.....
.....
\u1513
.....
.....
*.*.*
*.*.*
*.*.*
**..*
*...*
.***.
.....
.....
"""

_chartable = collections.defaultdict(list)
for line in spec.splitlines():
    if line:
        if len(line) == 1:
            char = line
        else:
            _chartable[char].append([vl == "*" for vl in line])


def _grid_char(c, default=" ", proportional=False):
    if c not in _chartable:
        c = default
    if proportional:
        filled_cols = [i for i in range(5) if any(_chartable[c][y][i] for y in range(10))]
        if not filled_cols: # blank
            filled_cols=[0,1]
    else:
        filled_cols=[0,4]
    return[l[filled_cols[0] : filled_cols[-1] + 1] for l in _chartable[c]]


def grid(s, default=" ", intra=1, proportional=False, width=None, align='c'):
    """
    makes a list of boolean lists to represent the text s in the fiftydot font
    
    Parameters
    ----------
    s : str
        string to represent
        
    default : str
        if a character has no representation in the font, it will be replaced
        with default, that is a blank by default
        if the length is not 1, a ValueError will be raised
        
    intra : int
        number of dots between characters
        default is 1
        
    proportional : bool
        if proportional is False (default), all characters will be 5 dots wide
        if proportional is True, the actual width of the character will be used
        Note that in case of proportional, a blank will be 2 dots wide.
        
    width : int
        width in dots of the result
        the default is the actal width (no padding applied)
        if the actual width is smaller than width, the string will be padded according to the padding parameter
        if the actual width is larger than width, the string is chopped according to the padding parameter
        
    padding : str
        if padding starts with a c (default), the result will be centered
        if padding starts with a l, the result will be left aligned
        if padding starts with a r, the result will be right aligned
    
    Returns
    -------
    the representation of s : list of boolean lists
    each set dot will be True, not set False
    """
    if len(default) != 1:
        raise ValueError('len of default is not 1')
    
    result = []
    for y in range(10):
        l = []
        for i, c in enumerate(s):
            l.extend((i!=0) * intra * [False] + _grid_char(c, default=default, proportional=proportional)[y])
        result.append(l)
            
    if width is None:
        return result
    actual_width = len(result[0])
    extra = width - actual_width
    if extra >=0:
        if align.lower().startswith('c'):
            extra_left = extra // 2
            extra_right = extra - extra_left
        elif align.lower().startswith('l'):
            extra_left=0
            extra_right=extra
        elif align.lower().startswith('r'):
            extra_left = extra
            extra_right = 0
        else:
            raise ValueError('align does not start with c, l or r')
            
        return [extra_left * [False] + l + extra_right * [False] for  l in result]
    else:
        if align.lower().startswith('c'):
            start = -extra//2
        elif align.lower().startswith('l'):
            start = 0
        elif align.lower().startswith('r'):
            start = -extra
        else:
            raise ValueError('align does not start with c, l or r')   
        return [l[start: start + width] for  l in result]
                
def coordinates(s, value=True, default=" ", intra=1, proportional=False, width=None, align='c', x_first=False):
    """
    return a list of coordinates representing the text s in the fiftydot font
    
    Parameters
    ----------
    s : str
        string to represent
        
    value : bool
        if True (default), the set dots will be returned
        if False, the non set dots will be returned
        
    default : str
        if a character has no representation in the font, it will be replaced
        with default, that is a blank by default
        if the length is not 1, a ValueError will be raised
        
    intra : int
        number of dots between characters
        default is 1
        
    proportional : bool
        if proportional is False (default), all characters will be 5 dots wide
        if proportional is True, the actual width of the character will be used
        Note that in case of proportional, a blank will be 2 dots wide.
        
    width : int
        width in dots of the result
        the default is the actal width (no padding applied)
        if the actual width is smaller than width, the string will be padded according to the padding parameter
        if the actual width is larger than width, the string is chopped according to the padding parameter
        
    padding : str
        if padding starts with a c (default), the result will be centered
        if padding starts with a l, the result will be left aligned
        if padding starts with a r, the result will be right aligned
        
    x_first : bool
        if False (default), coordinates will be given row by row
        if True, coordinates will be given column by column
    
    Returns
    -------
    a list of coordinates
    """
    result = []
    ct = grid(s, default=default, intra=intra, proportional=proportional, width=width, align=align)
    result = [(x, y) for y in range(10) for x, c in enumerate(ct[y]) if c == value]
    if x_first:
        result.sort()
    return result


def _check():
    for s in _chartable:
        for i, c in enumerate(_chartable[s]):
            if len(c) != 5:
                prisnt(f"error in {s} line {i}")
        if i != 9:
            print(f"error in {s} number of lines is {i+1}")
            
def grid_to_str(grid, leftborder='<', rightborder='>'):
    result = ''
    for l in grid:
        result += leftborder + ("".join("*" if vl else " " for vl in l)) + rightborder + '\n'
    return result


if __name__ == "__main__":
    _check()
    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=None, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=80, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=80, align='l')))    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=80, align='r')))    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=40, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=40, align='l')))    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=False, width=40, align='r')))    
        
    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=None, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=80, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=80, align='l')))    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=80, align='r')))     
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=40, align='c')))
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=40, align='l')))    
    print(grid_to_str(grid("abc defghi!A", intra=1, proportional=True, width=40, align='r')))        
        
    
    print(coordinates("a"))

    print(coordinates("a", x_first=True))

